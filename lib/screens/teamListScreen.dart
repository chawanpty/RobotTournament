import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import '../provider/teamProvider.dart';
import '../model/teamItem.dart';
import 'teamDetailScreen.dart';
import 'addTeamScreen.dart';

class TeamListScreen extends StatefulWidget {
  final String category;
  const TeamListScreen({super.key, required this.category});

  @override
  State<TeamListScreen> createState() => _TeamListScreenState();
}

class _TeamListScreenState extends State<TeamListScreen> {
  String searchQuery = ""; // ‚úÖ ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
  String? selectedRank;
  String? selectedSort = "‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î"; // ‚úÖ ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡∏° - ${widget.category}")),
      body: Column(
        children: [
          // üîç ‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ó‡∏µ‡∏°
          Padding(
            padding: const EdgeInsets.all(8.0),
            child: TextField(
              onChanged: (value) {
                setState(() {
                  searchQuery = value.toLowerCase(); // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
                });
              },
              decoration: InputDecoration(
                labelText: "‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡∏°",
                prefixIcon: const Icon(Icons.search),
                border:
                    OutlineInputBorder(borderRadius: BorderRadius.circular(10)),
              ),
            ),
          ),

          // üîΩ ‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö + ‡∏õ‡∏∏‡πà‡∏°‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï
          Padding(
            padding: const EdgeInsets.all(8.0),
            child: Row(
              children: [
                Expanded(
                  child: DropdownButtonFormField<String>(
                    value: selectedRank,
                    decoration: const InputDecoration(
                      labelText: "‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö",
                      border: OutlineInputBorder(),
                    ),
                    items: ["1", "2", "3", "‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö", "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô"]
                        .map((rank) => DropdownMenuItem(
                              value: rank,
                              child: Text("‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö: $rank"),
                            ))
                        .toList(),
                    onChanged: (value) {
                      setState(() {
                        selectedRank = value;
                      });
                    },
                  ),
                ),
                const SizedBox(width: 10),
                TextButton(
                  onPressed: () {
                    setState(() {
                      selectedRank = null; // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á
                    });
                  },
                  child:
                      const Text("‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï", style: TextStyle(color: Colors.red)),
                ),
              ],
            ),
          ),

          // üîΩ ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö
          Padding(
            padding: const EdgeInsets.all(8.0),
            child: DropdownButtonFormField<String>(
              value: selectedSort,
              decoration: const InputDecoration(
                labelText: "‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ï‡∏≤‡∏°",
                border: OutlineInputBorder(),
              ),
              items: ["‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î", "‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î"].map((String value) {
                return DropdownMenuItem<String>(
                  value: value,
                  child: Text(value),
                );
              }).toList(),
              onChanged: (String? newValue) {
                setState(() {
                  selectedSort = newValue!;
                });
              },
            ),
          ),

          // üìã ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡∏°‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á
          Expanded(
            child: Consumer<TeamProvider>(
              builder: (context, provider, child) {
                List<TeamItem> teams = provider.teams.where((team) {
                  bool matchesSearch = team.teamName.toLowerCase().contains(
                      searchQuery); // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà

                  bool matchesRank =
                      selectedRank == null || team.rank == selectedRank;

                  return matchesSearch &&
                      matchesRank; // ‚úÖ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ + ‡∏Å‡∏£‡∏≠‡∏á‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô
                }).toList();

                return teams.isEmpty
                    ? const Center(child: Text("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ó‡∏µ‡∏°‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤"))
                    : ListView.builder(
                        itemCount: teams.length,
                        itemBuilder: (context, index) {
                          final team = teams[index];
                          return ListTile(
                            title: Text("‡∏ó‡∏µ‡∏°: ${team.teamName}"),
                            subtitle: Text(
                                "‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö: ${team.rank} | ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô: ${team.score}"),
                            trailing: const Icon(Icons.arrow_forward_ios),
                            onTap: () {
                              Navigator.push(
                                context,
                                MaterialPageRoute(
                                  builder: (context) =>
                                      TeamDetailScreen(team: team),
                                ),
                              );
                            },
                          );
                        },
                      );
              },
            ),
          ),
        ],
      ),

      // ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          Navigator.push(
            context,
            MaterialPageRoute(
              builder: (context) => AddTeamScreen(category: widget.category),
            ),
          );
        },
        child: const Icon(Icons.add),
      ),
    );
  }
}
